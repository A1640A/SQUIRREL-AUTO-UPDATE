<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPjp1gD46dYE+OnWKfjp1mz46dat+OnW2fjp
        1vL46db99+XN/fTZtvPz17Lc89ezr/PXs2/z2LQr89m2BPPZtQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPjp1gD46dYD+OnWN/jp1pf46dbf+OnW+/jp
        1v/46db/+OnW//flz//02rn/89ey//PXsv/z17L/89ey/PPXsuHz17Oa89izOfPZtQTz2LQAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPjp1gD46dYA+OnWGvjp1on46dbq+OnW//jp
        1v/46db/+OnW//jp1v/35c//9Nq4//PXsv/z17L/89ey//PXsv/z17L/89ey//PXsv/z17Lr89ezjPPY
        tBvz17EA9Nq5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD46dYA+OnWAPjp1jX46dbC+OnW/vjp
        1v/46db/+OnW//jp1v/46db/9+XP//TauP/z17L/89ey//PXsv/z17L/89ey//PXsv/z17L/89ey//PX
        sv/z17L+89eyxPPYszfy1K0A89m2AAAAAAAAAAAAAAAAAAAAAAAAAAAA+OnWAPjp1gD46dZB+OnW2fjp
        1v/46db/+OnW//jp1v/46db/+OnW//flz//02rj/89ey//PXsv/z17L/89ey//PXsv/z17L/89ey//PX
        sv/z17L/89ey//PXsv/z17L/89ey2vPXs0Py1a8A89m2AAAAAAAAAAAAAAAAAPjp1gD46dYA+OnWNfjp
        1tj46db/+OnW//jp1v/46db/+OnW//jp1v/35c//9Nq4//PXsv/z17L/89ey//PXsv/z17L/89ey//PX
        sv/z17L/89ey//PXsv/z17L/89ey//PXsv/z17L/89ey2vPXszfz17IA9Nq4AAAAAAAAAAAA+OnWAPjp
        1hr46dbB+OnW//jp1v/46db/+OnW//jp1v/46db/9+XP//TauP/z17L/89ey//PXsv/z17L/89ey//PX
        sv/z17L/89ey//PXsv/z17L/89ey//PXsv/z17L/89ey//PXsv/z17L/89eyw/PYtBvz2LMAAAAAAPjp
        1gD46dYC+OnWifjp1v/46db/+OnW//jp1v/46db/+erW//nnz//227j/9dix//XYsv/12LL/9tiy//bY
        sv/22LL/99mz//fZs//32bP/9tmz//TYsv/z17L/89ey//PXsv/z17L/89ey//PXsv/z17L/89ezi/Pa
        uAPz2LUA+OnWAPjp1jj46dbp+OnW//jp1v/46db/+OnW//nq1v/n3dD/ysO6/8nAs//MwbT/zcK0/8zB
        tP/LwLP/y8G0/8rAs/+yrqn/lpuj/5Wbo/+1r6j/5M2w//XYsv/z17L/89ey//PXsv/z17L/89ey//PX
        sv/z17Lq89izOfPXswD46dYD+OnWl/jp1v/46db/+OnW//jp1v/46db/+urW/9bU0f+Pp8b/iqTG/05+
        v/8pZ7r/KWi7/yZgq/8mYKz/KGe6/xpSnP8RR43/EkeO/xpMj/9Ja5f/vLSp//TYsv/z17L/89ey//PX
        sv/z17L/89ey//PXsv/z17OZ9Nu5A/jp1ir46dbf+OnW//jp1v/46db/+OnW//jp1v/46db/+erW//zs
        1v/O0NH/MW6+/xddu/8YXrz/FVSm/xNLlP8XW7X/IF6u/xtOkP8SSI7/E0iO/w9Gjf8xW5P/xLmq//XZ
        sv/z17L/89ey//PXsv/z17L/89ey//PXsuDz2LQr+OnWbfjp1vv46db/+OnW//jp1v/46db/+OnW//jp
        1v/46db//OvW/5uvyf8XXrv/GV+7/xlfvP8WVaf/E0iO/xZWqv8sarv/VHWg/xRIjv8TSI7/E0iO/w9G
        jf9dd5r/7dOx//PXsv/z17L/89ey//PXsv/z17L/89ey/PPXs2/46dat+OnW//jp1v/46db/+OnW//jp
        1v/46db/+OnW//jp1v/65sz/pa65/xpguv8ZX7v/GV+8/xZVp/8TSI7/F1es/x5ivP+Bla//LFeR/xJH
        jv8TSI7/EkeO/yhWkf/Rwaz/9diy//PXsv/z17L/89ey//PXsv/z17L/89ezr/jp1tn46db/+OnW//jp
        1v/46db/+OnW//jp1v/66tb/+ubL//PZt//Nw7b/PXW+/xdduv8ZX7v/FlWm/xROmf8YXbf/GF67/4Wa
        tf9IaZb/EEaO/xNIjv8SSI7/H1CQ/8W6q//52rP/89ey//PXsv/z17L/89ey//PXsv/z17Lb+OnW8vjp
        1v/46db/+OnW//jp1v/46db/+OnW/97Z0v+ntcf/cJnQ/1CL2f9Rjd3/OXrQ/yJpx/8aX7r/GFy0/xlf
        u/8YX7v/iJu0/0Zolf8QRo7/E0iO/xFHjv8sWJL/sK2n/8a6q//y1rL/89ey//PXsv/z17L/89ey//PX
        svT46db9+OnW//jp1v/46db/+OnW//jp1v/56tb/u8fY/4Ko2v98odH/LHrf/zJ/4/9Mjub/LHrh/yBs
        0P8ZX7v/GF+7/yRlu/+Xo7L/LFiS/xJHjv8TSI7/D0aN/1p2mf9qf5z/JlSR/7SvqP/12LL/89ey//PX
        sv/z2LP/9d/C/fjp1v346db/+OnW//jp1v/46db/+OnW//jp1v/66dT/+uHA/+LQuf9PjN3/JHbh/yh4
        4f8md+L/IGzQ/xlfu/8VXbv/Y4vB/5SitP8VSY//E0iO/xJIjv8cTo//nJ+k/0Rnlv8MRI3/VXKZ/+zT
        sf/z17L/89iz//bgxP/46NX9+OnW8vjp1v/46db/+OnW//jp1v/46db/8+XV/77G0/+ruc3/ka3T/0SI
        4/8md+H/Jnfh/yZ34v8fbND/FV27/0d7wf/Pz9D/Yn+m/w9Fjf8TSI7/EUeO/zphlP96ip7/GEuP/xFG
        jv8zXJP/3Miu//XYs//24MT/+OjV//jp1vL46dbZ+OnW//jp1v/46db/+OnW//rq1v/b1tH/TIjX/zSA
        5f8se+T/Jnfh/yZ34f8md+H/JHbi/y100f9qkcX/2NXT/+Tbz/82YZn/EUaN/xNIjv8TSI7/GEuP/xdL
        j/8SSI7/EUaO/zhglP/gy7D/9+HE//jo1f/46db/+OnW2fjp1q346db/+OnW//jp1v/46db/+enW//Dl
        1/9qnN//JW3L/yptxf8md+L/JXfh/yt64P+CqNn/yc7W//Ll1f/87Nf/08/K/ydWlP8SR47/E0iO/xNI
        jv8TSI7/E0iO/xNIjv8PRY3/ZX2c//PexP/46dX/+OnW//jp1v/46das+OnWbfjp1vv46db/+OnW//jp
        1v/46db/+urW/9HU2f9Lg87/J27L/yV34v8jdeH/bJ3d//Dk1v/869b/+OnW//rq1//d1s7/MV2X/xFG
        jf8TSI7/E0iO/xNIjv8TSI7/EUeO/yJSkf+9vLv/++rW//jp1v/46db/+OnW+/jp1mz46dYq+OnW3/jp
        1v/46db/+OnW//jp1v/46db/+urW/8vR2f9QjuD/Knng/3mj3P/h3df/+urW//jp1v/46db/+OnW//bo
        1f98kq//EUeN/xFHjf8TSI7/E0iO/xBGjf8ZTJD/jp6z//fo1f/46db/+OnW//jp1v/46dbe+OnWKvjp
        1gP46daX+OnW//jp1v/46db/+OnW//jp1v/46db//OvW/5Kx2/+Iq9n/8+bV//rq1v/46db/+OnW//jp
        1v/46db/+erW/+je0f98kq//LFqW/xlMkP8cT5H/PWab/56quv/z5dT/+erW//jp1v/46db/+OnW//jp
        1pf46dYD+OnWAPjp1jj46dbp+OnW//jp1v/46db/+OnW//jp1v/46db/19fX/+3j1v/56tb/+OnW//jp
        1v/46db/+OnW//jp1v/46db/+erW//bo1f/X0sz/ur7D/8HCxf/k29D/+urX//np1v/46db/+OnW//jp
        1v/46dbp+OnWOPjp1gD46dYA+OnWAvjp1on46db/+OnW//jp1v/46db/+OnW//jp1v/56tb/+enW//jp
        1v/46db/+OnW//jp1v/46db/+OnW//jp1v/46db/+OnW//rq1//87Nf/++vX//nq1v/46db/+OnW//jp
        1v/46db/+OnW//jp1or46dYC+OnWAAAAAAD46dYA+OnWGvjp1sH46db/+OnW//jp1v/46db/+OnW//jp
        1v/46db/+OnW//jp1v/46db/+OnW//jp1v/46db/+OnW//jp1v/46db/+OnW//jp1v/46db/+OnW//jp
        1v/46db/+OnW//jp1v/46dbB+OnWGvjp1gAAAAAAAAAAAPjp1gD46dYA+OnWNvjp1tn46db/+OnW//jp
        1v/46db/+OnW//jp1v/46db/+OnW//jp1v/46db/+OnW//jp1v/46db/+OnW//jp1v/46db/+OnW//jp
        1v/46db/+OnW//jp1v/46db/+OnW2fjp1jb46dYA+OnWAAAAAAAAAAAAAAAAAPjp1gD46dYA+OnWQfjp
        1tn46db/+OnW//jp1v/46db/+OnW//jp1v/46db/+OnW//jp1v/46db/+OnW//jp1v/46db/+OnW//jp
        1v/46db/+OnW//jp1v/46db/+OnW//jp1tn46dZB+OnWAPjp1gAAAAAAAAAAAAAAAAAAAAAAAAAAAPjp
        1gD46dYA+OnWNfjp1sL46db++OnW//jp1v/46db/+OnW//jp1v/46db/+OnW//jp1v/46db/+OnW//jp
        1v/46db/+OnW//jp1v/46db/+OnW//jp1v746dbC+OnWNfjp1gD46dYAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAPjp1gD46dYA+OnWGvjp1on46dbq+OnW//jp1v/46db/+OnW//jp1v/46db/+OnW//jp
        1v/46db/+OnW//jp1v/46db/+OnW//jp1v/46dbq+OnWifjp1hr46dYA+OnWAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD46dYA+OnWA/jp1jf46daX+OnW3/jp1vv46db/+OnW//jp
        1v/46db/+OnW//jp1v/46db/+OnW//jp1vv46dbg+OnWmPjp1jf46dYD+OnWAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+OnWAPjp1gT46dYp+OnWbfjp
        1q346dbZ+OnW8/jp1v346db9+OnW8/jp1tr46dat+OnWbfjp1ir46dYE+OnWAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/4AB//4AAH/8AAA/+AAAH/AAAA/gAAAHwAAAA4AAAAGAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABgAAAAcAA
        AAPgAAAH8AAAD/gAAB/8AAA//gAAf/+AAf8=
</value>
  </data>
</root>